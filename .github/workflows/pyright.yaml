name: "Pyright"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, reopened, synchronize ]

jobs:
  job:
    name: "Python v${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11" ]
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v3

      - name: "Setup Node v18"
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: "Install Pyright"
        run: npm install -g pyright@latest

      - name: "Install Poetry"
        run: pipx install poetry

      - name: "Setup Python v${{ matrix.python-version }}"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: "Install Dependencies"
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install

      - name: "Run Pyright"
        run: |
          poetry run pyright
          poetry run pyright --ignoreexternal --verifytypes discord.ext.lava
